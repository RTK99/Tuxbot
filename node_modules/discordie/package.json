{
  "_args": [
    [
      {
        "raw": "discordie@^0.11.0",
        "scope": null,
        "escapedName": "discordie",
        "name": "discordie",
        "rawSpec": "^0.11.0",
        "spec": ">=0.11.0 <0.12.0",
        "type": "range"
      },
      "/home/ric1/tuxbot"
    ]
  ],
  "_from": "discordie@>=0.11.0 <0.12.0",
  "_id": "discordie@0.11.0",
  "_inCache": true,
  "_location": "/discordie",
  "_nodeVersion": "4.2.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/discordie-0.11.0.tgz_1483874551621_0.745103006483987"
  },
  "_npmUser": {
    "name": "discordie",
    "email": "discordie@ya.ru"
  },
  "_npmVersion": "3.3.10",
  "_phantomChildren": {
    "async": "1.5.2",
    "combined-stream": "1.0.5",
    "component-emitter": "1.2.1",
    "core-util-is": "1.0.2",
    "debug": "2.6.4",
    "extend": "3.0.0",
    "inherits": "2.0.3",
    "methods": "1.1.2",
    "mime": "1.3.4",
    "mime-types": "2.1.15",
    "reduce-component": "1.0.1"
  },
  "_requested": {
    "raw": "discordie@^0.11.0",
    "scope": null,
    "escapedName": "discordie",
    "name": "discordie",
    "rawSpec": "^0.11.0",
    "spec": ">=0.11.0 <0.12.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/discordie/-/discordie-0.11.0.tgz",
  "_shasum": "0274ab652c82f58378b676365b0a0e9294a80145",
  "_shrinkwrap": null,
  "_spec": "discordie@^0.11.0",
  "_where": "/home/ric1/tuxbot",
  "author": {
    "name": "qeled"
  },
  "bugs": {
    "url": "https://github.com/qeled/discordie/issues"
  },
  "dependencies": {
    "double-ended-queue": "^0.9.7",
    "ebml": "^2.1.0",
    "pako": "^0.2.8",
    "requireindex": "^1.1.0",
    "superagent": "^1.4.0",
    "tweetnacl": "^0.14.1",
    "ws": "^1.1.1"
  },
  "description": "A Node.js module for interfacing with the Discord API.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "0274ab652c82f58378b676365b0a0e9294a80145",
    "tarball": "https://registry.npmjs.org/discordie/-/discordie-0.11.0.tgz"
  },
  "engineStrict": true,
  "engines": {
    "node": ">=4.0.0"
  },
  "gitHead": "fc62ac098569adbf78ac2670132c9be092439321",
  "homepage": "https://github.com/qeled/discordie#readme",
  "keywords": [
    "discordapp",
    "discord",
    "api",
    "client",
    "node",
    "node.js"
  ],
  "license": "BSD-2-Clause",
  "main": "./lib/index.js",
  "maintainers": [
    {
      "name": "discordie",
      "email": "discordie@ya.ru"
    }
  ],
  "name": "discordie",
  "optionalDependencies": {},
  "readme": "# Discordie\r\n\r\n[![npm](https://img.shields.io/npm/dm/discordie.svg)](https://www.npmjs.com/package/discordie)\r\n\r\nA Node.js module providing a set of interfaces to interact with Discord API.\r\n\r\n[**Documentation**](http://qeled.github.io/discordie/)\r\n\r\n**Requires at least Node.js 4.0.0.**\r\n\r\n**No native modules required to work with audio. Choose from precompiled (default) or `node-opus` (optional).**\r\n\r\nJoin [#node_discordie](https://discord.gg/0SBTUU1wZTYM8nHo) in [Discord API](https://discord.gg/0SBTUU1wZTYM8nHo).\r\n\r\n## Fully Implemented\r\n\r\n* Messaging\r\n* Role and channel permission management API\r\n* Member management API (kicking, banning, etc.)\r\n* Direct messages\r\n* Voice encoding, sending, decoding and receiving\r\n(audio streaming example: [`examples/encoderstream.js`](https://github.com/qeled/discordie/blob/master/examples/encoderstream.js))\r\n* Guild (server) and channel management API\r\n* Local user profile (username change, statuses, avatars)\r\n* Multiserver voice support\r\n\r\n## Documentation\r\n\r\nhttp://qeled.github.io/discordie/\r\n\r\nMirrors inline documentation in files:\r\n* `lib/interfaces/*.js`\r\n* `lib/models/*.js`\r\n* `lib/voice/*.js`\r\n* `lib/Constants.js`\r\n* `lib/index.js`\r\n\r\n## Example\r\n\r\n```js\r\nvar Discordie = require(\"discordie\");\r\nvar Events = Discordie.Events;\r\n\r\nvar client = new Discordie();\r\n\r\nclient.connect({ token: \"\" });\r\n\r\nclient.Dispatcher.on(Events.GATEWAY_READY, e => {\r\n  console.log(\"Connected as: \" + client.User.username);\r\n});\r\n\r\nclient.Dispatcher.on(Events.MESSAGE_CREATE, e => {\r\n  if (e.message.content == \"ping\")\r\n    e.message.channel.sendMessage(\"pong\");\r\n});\r\n```\r\n\r\n## Related\r\n\r\n### Library comparison: https://discordapi.com/unofficial/comparison.html\r\n\r\n**.NET**:\r\n[RogueException/**Discord.Net**](https://github.com/RogueException/Discord.Net) ||\r\n[Luigifan/**DiscordSharp**](https://github.com/Luigifan/DiscordSharp) ||\r\n[robinhood128/**DiscordUnity**](https://github.com/robinhood128/DiscordUnity)\r\n\r\n**Node.js**:\r\n[izy521/**discord.io**](https://github.com/izy521/discord.io) ||\r\n[hydrabolt/**discord.js**](https://github.com/hydrabolt/discord.js) ||\r\n[abalabahaha/**eris**](https://github.com/abalabahaha/eris)\r\n\r\n**Python**:\r\n[Rapptz/**discord.py**](https://github.com/Rapptz/discord.py)\r\n\r\n**Ruby**:\r\n[meew0/**discordrb**](https://github.com/meew0/discordrb)\r\n\r\n**Go**:\r\n[bwmarrin/**discordgo**](https://github.com/bwmarrin/discordgo)\r\n\r\n**Rust**:\r\n[SpaceManiac/**discord-rs**](https://github.com/SpaceManiac/discord-rs)\r\n\r\n**PHP**:\r\n[teamreflex/**DiscordPHP**](https://github.com/teamreflex/DiscordPHP) ||\r\n[Cleanse/**discord-hypertext**](https://github.com/Cleanse/discord-hypertext)\r\n\r\n**Java**:\r\n[austinv11/**Discord4J**](https://github.com/austinv11/Discord4J) ||\r\n[DV8FromTheWorld/**JDA**](https://github.com/DV8FromTheWorld/JDA/) ||\r\n[BtoBastian/**Javacord**](https://github.com/BtoBastian/Javacord)\r\n\r\n**Lua**:\r\n[SinisterRectus/**Discordia**](https://github.com/SinisterRectus/Discordia) ||\r\n[satom99/**litcord**](https://github.com/satom99/litcord)\r\n\r\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/qeled/discordie.git"
  },
  "scripts": {
    "test": "node ./tests/index.js"
  },
  "version": "0.11.0"
}
